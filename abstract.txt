Allowing many processors to work in parallel offers no significant speedup when computing the rank of a finitely generated free group. Stallings' folding process, an algorithm for simplifying a directed edge-labeled graph, when applied to those graphs that represent finitely generated free groups, provides a graph-theoretic method for computing the rank of that group. Does adding more processors to Stallings' folding process offer any significant speedup? We answer this question negatively, proving that Stallings' folding process itself is an inherently sequential algorithm. This paper provides the proof along with the requisite mathematical background.

We show how the problem of computing the rank of a finitely generated free group reduces to the problem of computing an arbitrary bit of the execution of Stallings' folding process, thereby showing that the process satisfies the definition of an "inherently sequential algorithm". Thus, although Stallings' folding process is computable in polynomial time, its asymptotic running time cannot be improved by adding more processors. Since this process often appears in the theory of free groups, one may be able to use this fact to show that other problems and algorithms appearing in computational group theory are inherently sequential.
